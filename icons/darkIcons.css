/*Copyright (C) 2017  Matthew Richardson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/* ..... twisty ..... */
#folderTree treechildren:-moz-tree-twisty { list-style-image: url("folder-pane/twisty-dark.svg") !important; padding: 0 5px !important; }
#folderTree treechildren:-moz-tree-twisty(open) { list-style-image: url("folder-pane/twisty-expanded-dark.svg") !important; padding: 0 5px !important; }
#threadTree treechildren:-moz-tree-twisty { list-style-image: url("folder-pane/twisty-dark.svg") !important; padding: 0px !important; margin: 0px !important; }
#threadTree treechildren:-moz-tree-twisty(open) { list-style-image: url("folder-pane/twisty-expanded-dark.svg") !important; padding: 0px !important; margin: 0px !important; }
#threadTree treechildren:-moz-tree-twisty(selected) { list-style-image: url("folder-pane/twisty-light.svg") !important; padding: 0px !important; margin: 0px !important; }
#threadTree treechildren:-moz-tree-twisty(open, selected) { list-style-image: url("folder-pane/twisty-expanded-light.svg") !important; padding: 0px !important; margin: 0px !important; }
/******* Message view icons ********/
#folderTree treechildren::-moz-tree-image, #threadTree treechildren::-moz-tree-image { 
	width: 14px !important; 
	-moz-image-region: rect(0px 12px 12px 0px) !important; 
	margin-left: 1px !important;
}

#threadTree treechildren::-moz-tree-image(flaggedCol) { 
	margin-left: 2px !important;
}

#threadTree treechildren::-moz-tree-image(senderCol), #threadTree treechildren::-moz-tree-image(dateCol), #threadTree treechildren::-moz-tree-image(recipientCol), #threadTree treechildren::-moz-tree-image(sizeCol), #threadTree treechildren::-moz-tree-image(accountCol) { 
	width: 0px !important; 
	-moz-image-region: none !important;
}

#threadTree treechildren::-moz-tree-image(subjectCol) { 
	width: 14px !important; 
	-moz-image-region: rect(0px 12px 12px 0px) !important; 
	margin: 0px 4px 0px 2px !important; 
	padding: 0px 0px 0px 2px !important;
}

#threadCols { 
	padding-left: 0px !important; 
	padding-right: 0px !important;
}

#threadTree treechildren { 
	margin-left: 0px !important;
	margin-right: 0px !important;
	border-right: 0px solid var(--folder-tree-background-color) !important;
}

#threadTree > treechildren::-moz-tree-cell(attachmentCol) { 
	padding-left: 0px !important;
	padding-right: 0px !important;
}

/* ..... thread column ..... */
treechildren::-moz-tree-image(threadCol) { list-style-image: url("message-list/thread-dark.svg") !important; }
treechildren::-moz-tree-image(senderCol) { padding-left: 8px !important; }
treechildren::-moz-tree-image(subjectCol) { padding-left: 8px !important; }
treechildren::-moz-tree-image(dateCol) { padding-left: 8px !important; }

/* ..... read column ..... */
.readColumnHeader { list-style-image: url("message-list/read-header-dark.svg") !important; }
treechildren::-moz-tree-image(unreadButtonColHeader) { list-style-image: url("message-list/dot-read.svg") !important; }
treechildren::-moz-tree-image(unreadButtonColHeader, unread) { list-style-image: url("message-list/dot-unread.svg") !important; }
/* Unread and read are reversed for dark themes */

/* ..... attachment column ..... */
.attachmentColumnHeader { list-style-image: url("message-list/paperclip-header-dark.svg") !important; }
treechildren::-moz-tree-image(attachmentCol, attach) { list-style-image: url("message-list/paperclip.svg") !important; }

/* ..... flag/star column ..... */
.flagColumnHeader { list-style-image: url("message-list/star-header-dark.svg") !important; }
treechildren::-moz-tree-image(flaggedCol) { list-style-image: url("message-list/star-empty.svg") !important; }
treechildren::-moz-tree-image(flaggedCol, flagged) { list-style-image: url("message-list/star-filled.svg") !important; }

/* ..... junkStatus column ..... */
.junkStatusHeader { list-style-image: url("message-list/flame-junk-header-dark.svg") !important; }
treechildren::-moz-tree-image(junkStatusCol) { list-style-image: url("message-list/flame-empty.svg") !important; }
treechildren::-moz-tree-image(junkStatusCol, junk) { list-style-image: url("message-list/flame-junk.svg") !important; }
treechildren::-moz-tree-image(junkStatusCol, notjunk) { list-style-image: url("message-list/flame-empty.svg") !important; }

/******** Message view reply etc *********/
treechildren::-moz-tree-image(subjectCol, unread) { list-style-image: url("message-list/mail-in-unread.svg") !important; width: 12px !important; }
treechildren::-moz-tree-image(subjectCol, read) { list-style-image: url("message-list/mail-in-read.svg") !important; width: 12px !important; }
treechildren::-moz-tree-image(subjectCol, forwarded) { list-style-image: url("message-list/forwarded-dark.svg") !important; }
treechildren::-moz-tree-image(subjectCol, forwarded, selected) { list-style-image: url("message-list/forwarded-light.svg") !important; }
treechildren::-moz-tree-image(subjectCol, replied) { list-style-image: url("message-list/replied-dark.svg") !important; }
treechildren::-moz-tree-image(subjectCol, replied, selected) { list-style-image: url("message-list/replied-light.svg") !important; }
treechildren::-moz-tree-image(subjectCol, replied, forwarded) { list-style-image: url("message-list/replied-forwarded-dark.svg") !important; }
treechildren::-moz-tree-image(subjectCol, replied, forwarded, selected) { list-style-image: url("message-list/replied-forwarded-light.svg") !important; }
treechildren::-moz-tree-image(subjectCol, new) { list-style-image: url("message-list/new.svg") !important; }

/* ::::: Folder icons for menus   ::::: */

/* Folders */
treechildren::-moz-tree-image(folderNameCol) { list-style-image: url("folder-pane/folder.svg") !important; }

/* Newsgroup */
treechildren::-moz-tree-image(folderNameCol, serverType-nntp) { list-style-image: url("folder-pane/news-dark.svg") !important; }

/* Feed */
treechildren::-moz-tree-image(folderNameCol, isFeedFolder-true) { list-style-image: url("folder-pane/rss.svg") !important; }
#folderTree treechildren::-moz-tree-image(folderNameCol, specialFolder-Inbox) { list-style-image: url("folder-pane/inbox-dark.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Sent) { list-style-image: url("folder-pane/sent.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Outbox) { list-style-image: url("folder-pane/outbox-dark.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Drafts) { list-style-image: url("folder-pane/drafts.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Templates) { list-style-image: url("folder-pane/template-dark.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Junk) { list-style-image: url("folder-pane/flame-junk.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Trash) { list-style-image: url("folder-pane/trash.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Archive) { list-style-image: url("folder-pane/archive.svg") !important; }
treechildren::-moz-tree-image(folderNameCol, specialFolder-Virtual) { list-style-image: url("folder-pane/folder-search.svg") !important; }s

/** IMAP/POP/movemail account nodes */
treechildren::-moz-tree-image(folderNameCol, isServer-true) { list-style-image: url("folder-pane/email-account-dark.svg") !important; }

/* Local folders account node */
treechildren::-moz-tree-image(folderNameCol, isServer-true, serverType-none) { list-style-image: url("folder-pane/local-account-dark.svg") !important; }

/* News server */
treechildren::-moz-tree-image(folderNameCol, isServer-true, serverType-nntp) { list-style-image: url("folder-pane/news-dark.svg") !important; }

/* Feed account node */
treechildren::-moz-tree-image(folderNameCol, isServer-true, serverType-rss) { list-style-image: url("folder-pane/news-dark.svg") !important; }
